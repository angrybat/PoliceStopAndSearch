"""Create Bronze Tables

Revision ID: fb1ef6ecc640
Revises:
Create Date: 2025-09-07 08:08:07.300443

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fb1ef6ecc640"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE SCHEMA bronze")
    op.create_table(
        "AvailableDate",
        sa.Column("Id", sa.INTEGER(), nullable=False),
        sa.Column("YearMonth", sa.String(length=7), nullable=False),
        sa.PrimaryKeyConstraint("Id"),
        sa.UniqueConstraint("YearMonth"),
        schema="bronze",
    )
    op.create_table(
        "Force",
        sa.Column("Id", sa.String(length=20), nullable=False),
        sa.Column("Name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("Id"),
        schema="bronze",
    )
    op.create_table(
        "AvailableDateForceMapping",
        sa.Column("AvailableDateId", sa.INTEGER(), nullable=False),
        sa.Column("ForceId", sa.String(length=20), nullable=False),
        sa.ForeignKeyConstraint(
            ["AvailableDateId"],
            ["bronze.AvailableDate.Id"],
        ),
        sa.ForeignKeyConstraint(
            ["ForceId"],
            ["bronze.Force.Id"],
        ),
        sa.PrimaryKeyConstraint("AvailableDateId", "ForceId"),
        schema="bronze",
    )
    op.create_table(
        "StopAndSearch",
        sa.Column("Id", sa.INTEGER(), nullable=False),
        sa.Column("ForceId", sa.String(length=20), nullable=False),
        sa.Column("Type", sa.String(), nullable=False),
        sa.Column("InvolvedPerson", sa.BOOLEAN(), nullable=False),
        sa.Column("Datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("Operation", sa.BOOLEAN(), nullable=True),
        sa.Column("OperationName", sa.String(), nullable=True),
        sa.Column("Latitude", sa.DECIMAL(precision=9, scale=6), nullable=True),
        sa.Column("Longitude", sa.DECIMAL(precision=9, scale=6), nullable=True),
        sa.Column("StreetId", sa.INTEGER(), nullable=True),
        sa.Column("StreetName", sa.String(), nullable=True),
        sa.Column("Gender", sa.String(), nullable=True),
        sa.Column("AgeRange", sa.String(), nullable=True),
        sa.Column("SelfDefinedEthnicity", sa.String(), nullable=False),
        sa.Column("OfficerDefinedEthnicity", sa.String(), nullable=True),
        sa.Column("Legislation", sa.String(), nullable=True),
        sa.Column("ObjectOfSearch", sa.String(), nullable=True),
        sa.Column("OutcomeName", sa.String(), nullable=False),
        sa.Column("OutcomeId", sa.String(), nullable=False),
        sa.Column("OutcomeLinkedToObjectOfSearch", sa.BOOLEAN(), nullable=True),
        sa.Column("RemovalOfMoreThanOuterClothing", sa.BOOLEAN(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ForceId"],
            ["bronze.Force.Id"],
        ),
        sa.PrimaryKeyConstraint("Id"),
        sa.UniqueConstraint("Type"),
        schema="bronze",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("StopAndSearch", schema="bronze")
    op.drop_table("AvailableDateForceMapping", schema="bronze")
    op.drop_table("Force", schema="bronze")
    op.drop_table("AvailableDate", schema="bronze")
    op.execute("DROP SCHEMA bronze")
    # ### end Alembic commands ###
