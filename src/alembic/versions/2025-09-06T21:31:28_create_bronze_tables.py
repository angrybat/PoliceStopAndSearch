"""Create Bronze Tables

Revision ID: e2407456307c
Revises: 
Create Date: 2025-09-06 21:31:28.767241

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e2407456307c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('AvailableDate',
    sa.Column('Id', sa.INTEGER(), nullable=False),
    sa.Column('YearMonth', sa.String(length=7), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('YearMonth'),
    schema='bronze'
    )
    op.create_table('Force',
    sa.Column('Id', sa.INTEGER(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('ApiId', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('ApiId'),
    schema='bronze'
    )
    op.create_table('AvailableDateForceMapping',
    sa.Column('AvailableDateId', sa.INTEGER(), nullable=False),
    sa.Column('ForceId', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['AvailableDateId'], ['bronze.AvailableDate.Id'], ),
    sa.ForeignKeyConstraint(['ForceId'], ['bronze.Force.Id'], ),
    sa.PrimaryKeyConstraint('AvailableDateId', 'ForceId'),
    schema='bronze'
    )
    op.create_table('StopAndSearch',
    sa.Column('Id', sa.INTEGER(), nullable=False),
    sa.Column('ForceId', sa.INTEGER(), nullable=False),
    sa.Column('Type', sa.String(), nullable=False),
    sa.Column('InvolvedPerson', sa.BOOLEAN(), nullable=False),
    sa.Column('Datetime', sa.DATETIME(), nullable=False),
    sa.Column('Operation', sa.BOOLEAN(), nullable=True),
    sa.Column('OperationName', sa.String(), nullable=True),
    sa.Column('Latitude', sa.DECIMAL(precision=9, scale=6), nullable=True),
    sa.Column('Longitude', sa.DECIMAL(precision=9, scale=6), nullable=True),
    sa.Column('StreetId', sa.INTEGER(), nullable=True),
    sa.Column('StreetName', sa.String(), nullable=True),
    sa.Column('Gender', sa.String(), nullable=True),
    sa.Column('AgeRange', sa.String(), nullable=False),
    sa.Column('SelfDefinedEthnicity', sa.String(), nullable=False),
    sa.Column('OfficerDefinedEthnicity', sa.String(), nullable=False),
    sa.Column('Legislation', sa.String(), nullable=False),
    sa.Column('ObjectOfSearch', sa.String(), nullable=False),
    sa.Column('Outcome', sa.String(), nullable=False),
    sa.Column('OutcomeLinkedToObjectOfSearch', sa.BOOLEAN(), nullable=True),
    sa.Column('RemovalOfMoreThanOuterClothing', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['ForceId'], ['bronze.Force.Id'], ),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Type'),
    schema='bronze'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('StopAndSearch', schema='bronze')
    op.drop_table('AvailableDateForceMapping', schema='bronze')
    op.drop_table('Force', schema='bronze')
    op.drop_table('AvailableDate', schema='bronze')
    # ### end Alembic commands ###
